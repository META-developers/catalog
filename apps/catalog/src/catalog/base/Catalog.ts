/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CatalogCategory } from "../../catalogCategory/base/CatalogCategory";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  IsBoolean,
} from "class-validator";
import { Type } from "class-transformer";
import { Merchant } from "../../merchant/base/Merchant";
import { CatalogSchedule } from "../../catalogSchedule/base/CatalogSchedule";

@ObjectType()
class Catalog {
  @ApiProperty({
    required: true,
    type: () => [CatalogCategory],
  })
  @ValidateNested()
  @Type(() => CatalogCategory)
  @IsOptional()
  categories?: Array<CatalogCategory>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  description!: string;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  enabled!: boolean;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
    type: () => Merchant,
  })
  @ValidateNested()
  @Type(() => Merchant)
  merchant?: Merchant;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  posIntegrationId!: string;

  @ApiProperty({
    required: false,
    type: () => [CatalogSchedule],
  })
  @ValidateNested()
  @Type(() => CatalogSchedule)
  @IsOptional()
  schedule?: Array<CatalogSchedule>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { Catalog as Catalog };

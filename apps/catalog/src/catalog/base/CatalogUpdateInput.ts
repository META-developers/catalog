/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CatalogCategoryUpdateManyWithoutCatalogsInput } from "./CatalogCategoryUpdateManyWithoutCatalogsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsBoolean,
} from "class-validator";
import { Type } from "class-transformer";
import { MerchantWhereUniqueInput } from "../../merchant/base/MerchantWhereUniqueInput";
import { CatalogScheduleUpdateManyWithoutCatalogsInput } from "./CatalogScheduleUpdateManyWithoutCatalogsInput";

@InputType()
class CatalogUpdateInput {
  @ApiProperty({
    required: false,
    type: () => CatalogCategoryUpdateManyWithoutCatalogsInput,
  })
  @ValidateNested()
  @Type(() => CatalogCategoryUpdateManyWithoutCatalogsInput)
  @IsOptional()
  @Field(() => CatalogCategoryUpdateManyWithoutCatalogsInput, {
    nullable: true,
  })
  categories?: CatalogCategoryUpdateManyWithoutCatalogsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  enabled?: boolean;

  @ApiProperty({
    required: false,
    type: () => MerchantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MerchantWhereUniqueInput)
  @IsOptional()
  @Field(() => MerchantWhereUniqueInput, {
    nullable: true,
  })
  merchant?: MerchantWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  posIntegrationId?: string;

  @ApiProperty({
    required: false,
    type: () => CatalogScheduleUpdateManyWithoutCatalogsInput,
  })
  @ValidateNested()
  @Type(() => CatalogScheduleUpdateManyWithoutCatalogsInput)
  @IsOptional()
  @Field(() => CatalogScheduleUpdateManyWithoutCatalogsInput, {
    nullable: true,
  })
  schedule?: CatalogScheduleUpdateManyWithoutCatalogsInput;
}

export { CatalogUpdateInput as CatalogUpdateInput };

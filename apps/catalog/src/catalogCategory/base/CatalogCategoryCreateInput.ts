/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CatalogCreateNestedManyWithoutCatalogCategoriesInput } from "./CatalogCreateNestedManyWithoutCatalogCategoriesInput";
import { ValidateNested, IsOptional, IsString, IsInt } from "class-validator";
import { Type } from "class-transformer";
import { CatalogItemCreateNestedManyWithoutCatalogCategoriesInput } from "./CatalogItemCreateNestedManyWithoutCatalogCategoriesInput";
import { MerchantWhereUniqueInput } from "../../merchant/base/MerchantWhereUniqueInput";

@InputType()
class CatalogCategoryCreateInput {
  @ApiProperty({
    required: false,
    type: () => CatalogCreateNestedManyWithoutCatalogCategoriesInput,
  })
  @ValidateNested()
  @Type(() => CatalogCreateNestedManyWithoutCatalogCategoriesInput)
  @IsOptional()
  @Field(() => CatalogCreateNestedManyWithoutCatalogCategoriesInput, {
    nullable: true,
  })
  catalog?: CatalogCreateNestedManyWithoutCatalogCategoriesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  catalogId?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  description!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  images!: string;

  @ApiProperty({
    required: true,
    type: () => CatalogItemCreateNestedManyWithoutCatalogCategoriesInput,
  })
  @ValidateNested()
  @Type(() => CatalogItemCreateNestedManyWithoutCatalogCategoriesInput)
  @IsOptional()
  @Field(() => CatalogItemCreateNestedManyWithoutCatalogCategoriesInput, {
    nullable: true,
  })
  items?: CatalogItemCreateNestedManyWithoutCatalogCategoriesInput;

  @ApiProperty({
    required: true,
    type: () => MerchantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MerchantWhereUniqueInput)
  @Field(() => MerchantWhereUniqueInput)
  merchant!: MerchantWhereUniqueInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  ordinal!: number;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  posIntegrationId!: string;
}

export { CatalogCategoryCreateInput as CatalogCategoryCreateInput };

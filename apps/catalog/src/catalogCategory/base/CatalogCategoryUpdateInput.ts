/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CatalogUpdateManyWithoutCatalogCategoriesInput } from "./CatalogUpdateManyWithoutCatalogCategoriesInput";
import { ValidateNested, IsOptional, IsString, IsInt } from "class-validator";
import { Type } from "class-transformer";
import { CatalogItemUpdateManyWithoutCatalogCategoriesInput } from "./CatalogItemUpdateManyWithoutCatalogCategoriesInput";
import { MerchantWhereUniqueInput } from "../../merchant/base/MerchantWhereUniqueInput";

@InputType()
class CatalogCategoryUpdateInput {
  @ApiProperty({
    required: false,
    type: () => CatalogUpdateManyWithoutCatalogCategoriesInput,
  })
  @ValidateNested()
  @Type(() => CatalogUpdateManyWithoutCatalogCategoriesInput)
  @IsOptional()
  @Field(() => CatalogUpdateManyWithoutCatalogCategoriesInput, {
    nullable: true,
  })
  catalog?: CatalogUpdateManyWithoutCatalogCategoriesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  catalogId?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  images?: string;

  @ApiProperty({
    required: false,
    type: () => CatalogItemUpdateManyWithoutCatalogCategoriesInput,
  })
  @ValidateNested()
  @Type(() => CatalogItemUpdateManyWithoutCatalogCategoriesInput)
  @IsOptional()
  @Field(() => CatalogItemUpdateManyWithoutCatalogCategoriesInput, {
    nullable: true,
  })
  items?: CatalogItemUpdateManyWithoutCatalogCategoriesInput;

  @ApiProperty({
    required: false,
    type: () => MerchantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MerchantWhereUniqueInput)
  @IsOptional()
  @Field(() => MerchantWhereUniqueInput, {
    nullable: true,
  })
  merchant?: MerchantWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  ordinal?: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  posIntegrationId?: string;
}

export { CatalogCategoryUpdateInput as CatalogCategoryUpdateInput };

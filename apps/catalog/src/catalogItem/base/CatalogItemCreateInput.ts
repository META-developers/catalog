/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CatalogCategoryCreateNestedManyWithoutCatalogItemsInput } from "./CatalogCategoryCreateNestedManyWithoutCatalogItemsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsInt,
  IsEnum,
  IsNumber,
} from "class-validator";
import { Type } from "class-transformer";
import { MerchantWhereUniqueInput } from "../../merchant/base/MerchantWhereUniqueInput";
import { CatalogModifierGroupCreateNestedManyWithoutCatalogItemsInput } from "./CatalogModifierGroupCreateNestedManyWithoutCatalogItemsInput";
import { EnumCatalogItemSupportedFulfillmentModes } from "./EnumCatalogItemSupportedFulfillmentModes";
import { EnumCatalogItemType } from "./EnumCatalogItemType";

@InputType()
class CatalogItemCreateInput {
  @ApiProperty({
    required: false,
    type: () => CatalogCategoryCreateNestedManyWithoutCatalogItemsInput,
  })
  @ValidateNested()
  @Type(() => CatalogCategoryCreateNestedManyWithoutCatalogItemsInput)
  @IsOptional()
  @Field(() => CatalogCategoryCreateNestedManyWithoutCatalogItemsInput, {
    nullable: true,
  })
  category?: CatalogCategoryCreateNestedManyWithoutCatalogItemsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  categoryId?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  description!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  images!: string;

  @ApiProperty({
    required: true,
    type: () => MerchantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MerchantWhereUniqueInput)
  @Field(() => MerchantWhereUniqueInput)
  merchant!: MerchantWhereUniqueInput;

  @ApiProperty({
    required: true,
    type: () => CatalogModifierGroupCreateNestedManyWithoutCatalogItemsInput,
  })
  @ValidateNested()
  @Type(() => CatalogModifierGroupCreateNestedManyWithoutCatalogItemsInput)
  @IsOptional()
  @Field(() => CatalogModifierGroupCreateNestedManyWithoutCatalogItemsInput, {
    nullable: true,
  })
  modifierGroups?: CatalogModifierGroupCreateNestedManyWithoutCatalogItemsInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  ordinal!: number;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  posIntegrationId!: string;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  price!: number;

  @ApiProperty({
    required: true,
    enum: EnumCatalogItemSupportedFulfillmentModes,
    isArray: true,
  })
  @IsEnum(EnumCatalogItemSupportedFulfillmentModes, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumCatalogItemSupportedFulfillmentModes], {
    nullable: true,
  })
  supportedFulfillmentModes?: Array<"PICKUP" | "DELIVERY">;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  suspendedUntil?: number | null;

  @ApiProperty({
    required: true,
    enum: EnumCatalogItemType,
  })
  @IsEnum(EnumCatalogItemType)
  @Field(() => EnumCatalogItemType)
  type!:
    | "ALCOHOL"
    | "FOOD"
    | "REGULAR"
    | "SCHEDULED_SERVICE"
    | "ON_DEMAND_SERVICE";
}

export { CatalogItemCreateInput as CatalogItemCreateInput };

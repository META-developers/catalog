/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsDate,
  IsString,
  IsOptional,
  ValidateNested,
  IsInt,
} from "class-validator";
import { Type } from "class-transformer";
import { CatalogItem } from "../../catalogItem/base/CatalogItem";
import { Merchant } from "../../merchant/base/Merchant";
import { CatalogItemModifier } from "../../catalogItemModifier/base/CatalogItemModifier";

@ObjectType()
class CatalogModifierGroup {
  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  description!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  images!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  itemId!: string | null;

  @ApiProperty({
    required: false,
    type: () => [CatalogItem],
  })
  @ValidateNested()
  @Type(() => CatalogItem)
  @IsOptional()
  items?: Array<CatalogItem>;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  maximumSelection!: number;

  @ApiProperty({
    required: true,
    type: () => Merchant,
  })
  @ValidateNested()
  @Type(() => Merchant)
  merchant?: Merchant;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  minimumSelection!: number;

  @ApiProperty({
    required: true,
    type: () => [CatalogItemModifier],
  })
  @ValidateNested()
  @Type(() => CatalogItemModifier)
  @IsOptional()
  modifiers?: Array<CatalogItemModifier>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  posIntegrationId!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { CatalogModifierGroup as CatalogModifierGroup };

/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested, IsInt } from "class-validator";
import { CatalogItemCreateNestedManyWithoutCatalogModifierGroupsInput } from "./CatalogItemCreateNestedManyWithoutCatalogModifierGroupsInput";
import { Type } from "class-transformer";
import { MerchantWhereUniqueInput } from "../../merchant/base/MerchantWhereUniqueInput";
import { CatalogItemModifierCreateNestedManyWithoutCatalogModifierGroupsInput } from "./CatalogItemModifierCreateNestedManyWithoutCatalogModifierGroupsInput";

@InputType()
class CatalogModifierGroupCreateInput {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  description!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  images!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  itemId?: string | null;

  @ApiProperty({
    required: false,
    type: () => CatalogItemCreateNestedManyWithoutCatalogModifierGroupsInput,
  })
  @ValidateNested()
  @Type(() => CatalogItemCreateNestedManyWithoutCatalogModifierGroupsInput)
  @IsOptional()
  @Field(() => CatalogItemCreateNestedManyWithoutCatalogModifierGroupsInput, {
    nullable: true,
  })
  items?: CatalogItemCreateNestedManyWithoutCatalogModifierGroupsInput;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  maximumSelection!: number;

  @ApiProperty({
    required: true,
    type: () => MerchantWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MerchantWhereUniqueInput)
  @Field(() => MerchantWhereUniqueInput)
  merchant!: MerchantWhereUniqueInput;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  minimumSelection!: number;

  @ApiProperty({
    required: true,
    type: () =>
      CatalogItemModifierCreateNestedManyWithoutCatalogModifierGroupsInput,
  })
  @ValidateNested()
  @Type(
    () => CatalogItemModifierCreateNestedManyWithoutCatalogModifierGroupsInput
  )
  @IsOptional()
  @Field(
    () => CatalogItemModifierCreateNestedManyWithoutCatalogModifierGroupsInput,
    {
      nullable: true,
    }
  )
  modifiers?: CatalogItemModifierCreateNestedManyWithoutCatalogModifierGroupsInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  posIntegrationId!: string;
}

export { CatalogModifierGroupCreateInput as CatalogModifierGroupCreateInput };
